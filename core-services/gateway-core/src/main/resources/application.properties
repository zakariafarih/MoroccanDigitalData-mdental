server.port=8080

spring.application.name=gateway-core

# Cloud Gateway discovery
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Global CORS
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedHeaders=*

# MDental JWT Configuration
mdental.auth.jwt.issuer=mdental.org
mdental.auth.jwt.access-ttl=3600
mdental.auth.jwt.refresh-ttl=2592000
# Secret key for HS256 signing (actual secret would be set via environment variable)
mdental.auth.jwt.secret=${JWT_SECRET:bXkxNmNoYXJzc2VjcmV0MTZjaGFyc3NlY3JldHdpdGhzdWZmaWNpZW50bGVuZ3Ro}

# Resilience4j ? Circuit Breakers
resilience4j.circuitbreaker.instances.clinicServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.clinicServiceCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.clinicServiceCircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.clinicServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.clinicServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.clinicServiceCircuitBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.patientServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.patientServiceCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.patientServiceCircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.patientServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.patientServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.patientServiceCircuitBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.appointmentServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.appointmentServiceCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.appointmentServiceCircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.appointmentServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.appointmentServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.appointmentServiceCircuitBreaker.failureRateThreshold=50

resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.authServiceCircuitBreaker.failureRateThreshold=50

# Resilience4j ? TimeLimiter & Retry
resilience4j.timelimiter.instances.default.timeoutDuration=3s

resilience4j.retry.instances.default.maxAttempts=3
resilience4j.retry.instances.default.waitDuration=500ms

# Actuator
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# Eureka Client
eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.instance.prefer-ip-address=true
eureka.instance.hostname=${HOSTNAME:localhost}

# Logging Levels
logging.level.root=INFO
logging.level.org.springframework.cloud.gateway=INFO
logging.level.org.springframework.security=INFO
logging.level.org.mdental=DEBUG
logging.level.reactor.netty.http.client=INFO

# Allow WebFlux security beans to override servlet ones
spring.main.allow-bean-definition-overriding=true

spring.main.web-application-type=reactive